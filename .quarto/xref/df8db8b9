{"entries":[{"caption":"6  AI Frameworks","key":"sec-ai_frameworks","order":{"number":1,"section":[6,0,0,0,0,0,0]}},{"caption":"TensorFlow Framework Comparison - Software. Source: TensorFlow.","key":"fig-tf-sw-comparison","order":{"number":14,"section":[6,9,2,0,0,0,0]}},{"caption":"6.7 Embedded AI Frameworks","key":"sec-ai_frameworks_embedded","order":{"number":6,"section":[6,7,0,0,0,0,0]}},{"caption":"Visualization of colored image structure that can be easily stored as a 3D Tensor. Credit: Niklas Lang","key":"fig-tensor-data-structure-b","order":{"number":5,"section":[6,4,1,0,0,0,0]}},{"caption":"Comparison of PyTorch and TensorFlow.","key":"tbl-pytorch_vs_tf","order":{"number":1,"section":[6,3,7,0,0,0,0]}},{"caption":"Four abstractions in current ML system stacks. Source: TVM.","key":"fig-mlsys-stack","order":{"number":16,"section":[6,10,1,0,0,0,0]}},{"caption":"Data Loaders","key":"sec-frameworks-data-loaders","order":{"number":4,"section":[6,4,3,1,0,0,0]}},{"caption":"Exploring Keras: Building, Training, and Evaluating Neural Networks","key":"exr-k","order":{"number":3,"section":[6,3,5,0,0,0,0]}},{"caption":"Overfitting versus underfitting. Source: Aquarium Learning","key":"fig-overfitting","order":{"number":8,"section":[6,4,4,0,0,0,0]}},{"caption":"Transfer learning. Source: Tech Target","key":"fig-tl","order":{"number":11,"section":[6,5,4,1,0,0,0]}},{"caption":"6.5 Advanced Features","key":"sec-ai_frameworks-advanced","order":{"number":5,"section":[6,5,0,0,0,0,0]}},{"caption":"Comparison of frameworks: TensorFlow Lite Micro, TinyEngine, and CMSIS-NN","key":"tbl-compare_frameworks","order":{"number":4,"section":[6,8,0,0,0,0,0]}},{"caption":"TensorFlow Framework Comparison - General. Source: TensorFlow.","key":"fig-tf-comparison","order":{"number":13,"section":[6,9,0,0,0,0,0]}},{"caption":"PyTorch vs. TensorFlow: Features and Functions. Source: K&C","key":"fig-tensorflow-pytorch","order":{"number":1,"section":[6,2,0,0,0,0,0]}},{"caption":"Basic example of a computational graph.","key":"fig-comp-graph","order":{"number":6,"section":[6,4,2,1,0,0,0]}},{"caption":"TensorFlow Framework Comparison - Hardware. Source: TensorFlow.","key":"fig-tf-hw-comparison","order":{"number":15,"section":[6,9,3,0,0,0,0]}},{"caption":"6.12 Resources","key":"sec-ai-frameworks-resource","order":{"number":7,"section":[6,12,0,0,0,0,0]}},{"caption":"Comparison of framework types for Cloud AI, Edge AI, and TinyML.","key":"tbl-ml_frameworks","order":{"number":3,"section":[6,6,3,0,0,0,0]}},{"caption":"Reading a precision-recall curve. Source: AIM","key":"fig-precision-recall","order":{"number":9,"section":[6,4,7,2,0,0,0]}},{"caption":"Popularity of ML frameworks in the United States as measured by Google web searches. Source: Google.","key":"fig-ml-framework","order":{"number":2,"section":[6,2,0,0,0,0,0]}},{"caption":"6.4.1 Tensor data structures","key":"sec-tensor-data-structures","order":{"number":3,"section":[6,4,1,0,0,0,0]}},{"caption":"6.3.7 PyTorch vs. TensorFlow","key":"sec-pytorch_vs_tensorflow","order":{"number":2,"section":[6,3,7,0,0,0,0]}},{"caption":"Comparison between Static (Declare-then-execute) and Dynamic (Define-by-run) Execution Graphs, highlighting their respective pros and cons.","key":"tbl-exec-graph","order":{"number":2,"section":[6,4,2,2,0,0,0]}},{"caption":"Companies offering ML hardware accelerators. Source: Gradient Flow.","key":"fig-hardware-accelerator","order":{"number":10,"section":[6,4,9,0,0,0,0]}},{"caption":"TensorFlow Core","key":"exr-tfc","order":{"number":1,"section":[6,3,1,0,0,0,0]}},{"caption":"A centralized-server approach to federated learning. Source: NVIDIA.","key":"fig-federated-learning","order":{"number":12,"section":[6,5,4,2,0,0,0]}},{"caption":"6.3 Deep Dive into TensorFlow","key":"sec-deep_dive_into_tensorflow","order":{"number":1,"section":[6,3,0,0,0,0,0]}},{"caption":"Comparing static and dynamic graphs. Source: Dev","key":"fig-static-vs-dynamic","order":{"number":7,"section":[6,4,2,2,0,0,0]}},{"caption":"Architecture overview of TensorFlow 2.0. Source: Tensorflow.","key":"fig-tensorflow-architecture","order":{"number":3,"section":[6,3,1,0,0,0,0]}},{"caption":"TensorFlow Lite","key":"exr-tfl","order":{"number":2,"section":[6,3,1,0,0,0,0]}},{"caption":"Visualization of Tensor Data Structure.","key":"fig-tensor-data-structure-a","order":{"number":4,"section":[6,4,1,0,0,0,0]}}],"headings":["overview","framework-evolution","sec-deep_dive_into_tensorflow","tf-ecosystem","static-computation-graph","usability-deployment","architecture-design","built-in-functionality-keras","limitations-and-challenges","sec-pytorch_vs_tensorflow","basic-framework-components","sec-tensor-data-structures","computational-graphs","graph-definition","static-vs.-dynamic-graphs","data-pipeline-tools","sec-frameworks-data-loaders","data-augmentation","loss-functions-and-optimization-algorithms","model-training-support","validation-and-analysis","evaluation-metrics","visualization","differentiable-programming","hardware-acceleration","sec-ai_frameworks-advanced","distributed-training","model-conversion","automl-no-codelow-code-ml","advanced-learning-methods","transfer-learning","federated-learning","framework-specialization","cloud","edge","embedded","sec-ai_frameworks_embedded","resource-constraints","frameworks-libraries","challenges","fragmented-ecosystem","disparate-hardware-needs","lack-of-portability","incomplete-infrastructure","no-standard-benchmark","minimal-real-world-testing","summary","examples","interpreter","compiler-based","library","choosing-the-right-framework","model","software","hardware","other-factors","performance","scalability","integration-with-data-engineering-tools","integration-with-model-optimization-tools","ease-of-use","community-support","future-trends-in-ml-frameworks","decomposition","high-performance-compilers-libraries","ml-for-ml-frameworks","conclusion","sec-ai-frameworks-resource","sec-ai_frameworks"],"options":{"appendix-delim":":","appendix-title":"Appendix","chapter-id":"sec-ai_frameworks","chapters":true,"custom":["labqfloatlabLab","exrfloatexrExercise","vidfloatvidVideo"]}}