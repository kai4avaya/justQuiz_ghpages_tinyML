{"entries":[{"caption":"17  Robust AI","key":"sec-robust_ai","order":{"number":1,"section":[17,0,0,0,0,0,0]}},{"caption":"Adversarial example generation applied to GoogLeNet (Szegedy et al., 2014a) on ImageNet. Source: Goodfellow","key":"fig-adversarial-googlenet","order":{"number":20,"section":[17,4,1,3,0,0,0]}},{"caption":"Hardware errors can occur due to a variety of reasons and at different times and/or locations in a system, which can be explored when studying the impact of hardware-based errors on systems [@ahmadilivani2024systematic]","key":"fig-hardware-errors","order":{"number":38,"section":[17,6,2,0,0,0,0]}},{"caption":"n-bits representation of the Reed-Solomon codes. Source: GeeksforGeeks","key":"fig-Reed-Solomon","order":{"number":17,"section":[17,3,4,1,2,0,0]}},{"caption":"Temporal evolution. Source: Białek","key":"fig-temporal-evoltion","order":{"number":29,"section":[17,4,3,2,0,0,0]}},{"caption":"Stuck-at Fault Model in Digital Circuits. Source: Accendo Reliability","key":"fig-stuck-fault","order":{"number":8,"section":[17,3,2,3,0,0,0]}},{"caption":"Autoencoder. Source: Dertat","key":"fig-autoencoder","order":{"number":31,"section":[17,4,4,2,1,0,0]}},{"caption":"Comparison of transient, permanent, and intermittent faults.","key":"tbl-fault_types","order":{"number":1,"section":[17,3,5,0,0,0,0]}},{"caption":"Silent data corruption (SDC) errors are a major issue for AI hypercomputers. Source: Jeff Dean at MLSys 2024, Keynote (Google)","key":"fig-sdc-jeffdean","order":{"number":2,"section":[17,2,1,0,0,0,0]}},{"caption":"Watchdog timer example in detecting MCU faults. Source: Ablic","key":"fig-watchdog","order":{"number":14,"section":[17,3,4,1,1,0,0]}},{"caption":"Tesla full self-driving computer with dual redundant SoCs. Source: Tesla","key":"fig-tesla-dmr","order":{"number":12,"section":[17,3,4,1,1,0,0]}},{"caption":"Increased resistance due to an intermittent fault – crack between copper bump and package solder. Source: Constantinescu","key":"fig-intermittent-fault","order":{"number":9,"section":[17,3,3,0,0,0,0]}},{"caption":"Garbage In – Garbage Out. Source: Information Matters","key":"fig-distribution-shift-example","order":{"number":23,"section":[17,4,2,2,0,0,0]}},{"caption":"Mechanism of Hardware Transient Fault Occurrence. Source: NTT","key":"fig-transient-fault","order":{"number":5,"section":[17,3,1,2,0,0,0]}},{"caption":"Parity bit example. Source: Computer Hope","key":"fig-parity","order":{"number":11,"section":[17,3,4,1,1,0,0]}},{"caption":"The curly brackets enclose the distribution shift between the environments. Here, z stands for the spurious feature, and y stands for label class. Source: Xin","key":"fig-distribution-shift","order":{"number":27,"section":[17,4,3,1,0,0,0]}},{"caption":"Intel Pentium processor with the FDIV permanent fault. The triangular regions are where erroneous calculations occurred. Source: Byte Magazine","key":"fig-permanent-fault","order":{"number":7,"section":[17,3,2,1,0,0,0]}},{"caption":"Example of GPU out-of-the-memory and suboptimal utilization issues","key":"fig-gpu-out-of-memory","order":{"number":34,"section":[17,5,2,0,0,0,0]}},{"caption":"Graffiti on a stop sign tricked a self-driving car into thinking it was a 45 mph speed limit sign. Source: Eykholt","key":"fig-graffiti","order":{"number":21,"section":[17,4,1,3,0,0,0]}},{"caption":"17.3.4 Detection and Mitigation","key":"sec-hw-intermittent-detect-mitigate","order":{"number":1,"section":[17,3,4,0,0,0,0]}},{"caption":"SDC in ML training phase results in anomalies in the gradient norm. Source: Jeff Dean, MLSys 2024 Keynote (Google)","key":"fig-sdc-training-fault","order":{"number":6,"section":[17,3,1,4,0,0,0]}},{"caption":"NightShade’s poisoning effects on Stable Diffusion. Source: TOMÉ","key":"fig-poisoning-example","order":{"number":22,"section":[17,4,2,1,0,0,0]}},{"caption":"17.8 Resources","key":"sec-robust-ai-resource","order":{"number":2,"section":[17,8,0,0,0,0,0]}},{"caption":"Hardware errors may manifest themselves in different ways at the software level, as classified by Bolchini et al. [@bolchini2022fast]","key":"fig-hardware-errors-bolchini","order":{"number":42,"section":[17,6,4,0,0,0,0]}},{"caption":"NASA’s Failed Mars Polar Lander mission in 1999 cost over $200M. Source: SlashGear","key":"fig-nasa-example","order":{"number":4,"section":[17,2,3,0,0,0,0]}},{"caption":"Comparison of techniques at layers of abstraction. Source: MAVFI","key":"fig-mavfi","order":{"number":40,"section":[17,6,3,0,2,0,0]}},{"caption":"Hardware bitflips in ML workloads can cause phantom objects and misclassifications, which can erroneously be used downstream by larger systems, such as in autonomous driving. Shown above is a correct and faulty version of the same image using the PyTorchFI injection framework.","key":"fig-phantom-objects","order":{"number":41,"section":[17,6,3,0,3,0,0]}},{"caption":"Residue induced intermittent fault in a DRAM chip. Source: Hynix Semiconductor","key":"fig-intermittent-fault-dram","order":{"number":10,"section":[17,3,3,2,0,0,0]}},{"caption":"Radiation test setup for semiconductor components [@lee2022design] Source: JD Instrument","key":"fig-beam-testing","order":{"number":39,"section":[17,6,2,1,0,0,0]}},{"caption":"Gradient-Based Attacks. Source: Ivezic","key":"fig-gradient-attack","order":{"number":19,"section":[17,4,1,2,0,0,0]}},{"caption":"Example of error masking in microarchitectural components [@ko2021characterizing]","key":"fig-error-masking","order":{"number":37,"section":[17,6,1,0,0,0,0]}},{"caption":"Fault Tolerance","key":"exr-ft","order":{"number":4,"section":[17,5,4,0,0,0,0]}},{"caption":"Poisoning Attacks","key":"exr-pa","order":{"number":3,"section":[17,4,2,3,1,0,0]}},{"caption":"A small adversarial noise added to the original image can make the neural network classify the image as a Guacamole instead of an Egyptian cat. Source: Sutanto","key":"fig-adversarial-attack-noise-example","order":{"number":18,"section":[17,4,1,1,0,0,0]}},{"caption":"Malicious data injection. Source: Li","key":"fig-adversarial-attack-injection","order":{"number":30,"section":[17,4,4,2,1,0,0]}},{"caption":"Continuous Integration/Continuous Deployment (CI/CD) procedure. Source: geeksforgeeks","key":"fig-CI-CD-procedure","order":{"number":36,"section":[17,5,4,0,0,0,0]}},{"caption":"Silent data corruption in database applications. Source: Facebook","key":"fig-sdc-example","order":{"number":1,"section":[17,2,1,0,0,0,0]}},{"caption":"Automated regression testing. Source: UTOR","key":"fig-regression-testing","order":{"number":35,"section":[17,5,4,0,0,0,0]}},{"caption":"Adversarial Attacks","key":"exr-aa","order":{"number":2,"section":[17,4,1,3,0,0,0]}},{"caption":"Google employs hot spare cores to transparently handle SDCs in the data center. Source: Jeff Dean, MLSys 2024 Keynote (Google)","key":"fig-sdc-controller","order":{"number":13,"section":[17,3,4,1,1,0,0]}},{"caption":"Transfer learning. Source: Bhavsar","key":"fig-transfer-learning","order":{"number":33,"section":[17,4,4,3,3,0,0]}},{"caption":"An image of the number “3” in original form and with basic augmentations applied.","key":"fig-data-augmentation","order":{"number":32,"section":[17,4,4,2,3,0,0]}},{"caption":"Data Poisoning Attack. Source: Sikandar","key":"fig-poisoning-attack-example","order":{"number":24,"section":[17,4,2,2,0,0,0]}},{"caption":"Concept drift refers to a change in data patterns and relationships over time. Source: Evidently AI","key":"fig-drift-over-time","order":{"number":28,"section":[17,4,3,1,0,0,0]}},{"caption":"Anomaly Detection","key":"exr-ad","order":{"number":1,"section":[17,3,4,1,2,0,0]}},{"caption":"Heartbeat messages in distributed systems. Source: GeeksforGeeks","key":"fig-heartbeat","order":{"number":16,"section":[17,3,4,1,2,0,0]}},{"caption":"Samples of dirty-label poison data regarding mismatched text/image pairs. Source: Shan","key":"fig-dirty-label-example","order":{"number":25,"section":[17,4,2,3,1,0,0]}},{"caption":"Examples of anomaly detection. (a) Fully supervised anomaly detection, (b) normal-only anomaly detection, (c, d, e) semi-supervised anomaly detection, (f) unsupervised anomaly detection. Source: Google","key":"fig-ad","order":{"number":15,"section":[17,3,4,1,2,0,0]}},{"caption":"Different attack types on ML models.","key":"tbl-attack_types","order":{"number":2,"section":[17,4,1,2,0,0,0]}},{"caption":"Tesla in the fatal California crash was on Autopilot. Source: BBC News","key":"fig-tesla-example","order":{"number":3,"section":[17,2,2,0,0,0,0]}},{"caption":"Data poisoning. Source: @shan2023prompt)","key":"fig-poisoning","order":{"number":26,"section":[17,4,2,3,1,0,0]}}],"headings":["introduction","real-world-examples","cloud","edge","embedded","hardware-faults","transient-faults","definition-and-characteristics","causes-of-transient-faults","mechanisms-of-transient-faults","impact-on-ml-systems","permanent-faults","definition-and-characteristics-1","causes-of-permanent-faults","mechanisms-of-permanent-faults","impact-on-ml-systems-1","intermittent-faults","definition-and-characteristics-2","causes-of-intermittent-faults","mechanisms-of-intermittent-faults","impact-on-ml-systems-2","sec-hw-intermittent-detect-mitigate","fault-detection-techniques","hardware-level-fault-detection","software-level-fault-detection","summary","ml-model-robustness","adversarial-attacks","definition-and-characteristics-3","mechanisms-of-adversarial-attacks","impact-on-ml-systems-3","data-poisoning","definition-and-characteristics-4","mechanisms-of-data-poisoning","impact-on-ml-systems-4","case-study","distribution-shifts","definition-and-characteristics-5","mechanisms-of-distribution-shifts","impact-on-ml-systems-5","detection-and-mitigation","adversarial-attacks-2","adversarial-example-detection-techniques","adversarial-defense-strategies","robustness-evaluation-and-testing","data-poisoning-1","anomaly-detection-techniques-for-identifying-poisoned-data","data-sanitization-and-preprocessing-techniques","robust-training-techniques","secure-and-trusted-data-sourcing","distribution-shifts-1","detecting-and-mitigating-distribution-shifts","detection-techniques-for-distribution-shifts","mitigation-techniques-for-distribution-shifts","software-faults","definition-and-characteristics-6","mechanisms-of-software-faults-in-ml-frameworks","impact-on-ml-systems-6","detection-and-mitigation-1","tools-and-frameworks","fault-models-and-error-models","hardware-based-fault-injection","methods","limitations","software-based-fault-injection-tools","advantages-and-trade-offs","limitations-1","types-of-fault-injection-tools","domain-specific-examples","bridging-the-gap-between-hardware-and-software-error-models","fidelity-bridging-the-gap","importance-of-capturing-true-hardware-behavior","conclusion","sec-robust-ai-resource","sec-robust_ai"],"options":{"appendix-delim":":","appendix-title":"Appendix","chapter-id":"sec-robust_ai","chapters":true,"custom":["labqfloatlabLab","exrfloatexrExercise","vidfloatvidVideo"]}}